package model.vo;

import java.math.BigDecimal;

import java.sql.SQLException;
import java.sql.Timestamp;

import model.eo.XxhrHmoHdr_EOImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Feb 16 10:59:59 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxhrHmoHdr_VORowImpl extends ViewRowImpl {


    public static final int ENTITY_XXHRHMOHDR_EO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        AddiCategory,
        AlternateEmail,
        ApprovalStatus,
        ApproverComments,
        BusinessUnitId,
        CreatedBy,
        CreationDate,
        ErrorMsg,
        Gender,
        HmoAcceptanceFlag,
        HmoCategory,
        HmoCopyDepFlag,
        HmoHdrId,
        HmoMasterHdrId,
        HmoOption,
        HmoPlanDeduction,
        HmoPlanTotal,
        HmoRequestDate,
        HmoRequestNo,
        HmoTransReference,
        HmoType,
        Hospital,
        LastUpdateDate,
        LastUpdateLogin,
        LastUpdatedBy,
        MaritalStatus,
        MobileNo,
        PayrollBatchName,
        PersonId,
        Photo,
        PhotoClob,
        ResiAddress,
        SoaFlowid,
        StateOfResidence,
        RequestType,
        ActiveFlag,
        HmoPlanName,
        Trans_EligibleCost,
        Trans_AxaLbEligibleCost,
        Trans_EmpCost,
        Trans_DateofBirth,
        XxhrHmoDtl_VO,
        FetchDepOption_ROVO,
        MaximumEligibleCost_ROVO,
        XxhrHmoMasterHdr_ROVO,
        XxperEmployee_V_ROVO1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ADDICATEGORY = AttributesEnum.AddiCategory.index();
    public static final int ALTERNATEEMAIL = AttributesEnum.AlternateEmail.index();
    public static final int APPROVALSTATUS = AttributesEnum.ApprovalStatus.index();
    public static final int APPROVERCOMMENTS = AttributesEnum.ApproverComments.index();
    public static final int BUSINESSUNITID = AttributesEnum.BusinessUnitId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int ERRORMSG = AttributesEnum.ErrorMsg.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int HMOACCEPTANCEFLAG = AttributesEnum.HmoAcceptanceFlag.index();
    public static final int HMOCATEGORY = AttributesEnum.HmoCategory.index();
    public static final int HMOCOPYDEPFLAG = AttributesEnum.HmoCopyDepFlag.index();
    public static final int HMOHDRID = AttributesEnum.HmoHdrId.index();
    public static final int HMOMASTERHDRID = AttributesEnum.HmoMasterHdrId.index();
    public static final int HMOOPTION = AttributesEnum.HmoOption.index();
    public static final int HMOPLANDEDUCTION = AttributesEnum.HmoPlanDeduction.index();
    public static final int HMOPLANTOTAL = AttributesEnum.HmoPlanTotal.index();
    public static final int HMOREQUESTDATE = AttributesEnum.HmoRequestDate.index();
    public static final int HMOREQUESTNO = AttributesEnum.HmoRequestNo.index();
    public static final int HMOTRANSREFERENCE = AttributesEnum.HmoTransReference.index();
    public static final int HMOTYPE = AttributesEnum.HmoType.index();
    public static final int HOSPITAL = AttributesEnum.Hospital.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int MARITALSTATUS = AttributesEnum.MaritalStatus.index();
    public static final int MOBILENO = AttributesEnum.MobileNo.index();
    public static final int PAYROLLBATCHNAME = AttributesEnum.PayrollBatchName.index();
    public static final int PERSONID = AttributesEnum.PersonId.index();
    public static final int PHOTO = AttributesEnum.Photo.index();
    public static final int PHOTOCLOB = AttributesEnum.PhotoClob.index();
    public static final int RESIADDRESS = AttributesEnum.ResiAddress.index();
    public static final int SOAFLOWID = AttributesEnum.SoaFlowid.index();
    public static final int STATEOFRESIDENCE = AttributesEnum.StateOfResidence.index();
    public static final int REQUESTTYPE = AttributesEnum.RequestType.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int HMOPLANNAME = AttributesEnum.HmoPlanName.index();
    public static final int TRANS_ELIGIBLECOST = AttributesEnum.Trans_EligibleCost.index();
    public static final int TRANS_AXALBELIGIBLECOST = AttributesEnum.Trans_AxaLbEligibleCost.index();
    public static final int TRANS_EMPCOST = AttributesEnum.Trans_EmpCost.index();
    public static final int TRANS_DATEOFBIRTH = AttributesEnum.Trans_DateofBirth.index();
    public static final int XXHRHMODTL_VO = AttributesEnum.XxhrHmoDtl_VO.index();
    public static final int FETCHDEPOPTION_ROVO = AttributesEnum.FetchDepOption_ROVO.index();
    public static final int MAXIMUMELIGIBLECOST_ROVO = AttributesEnum.MaximumEligibleCost_ROVO.index();
    public static final int XXHRHMOMASTERHDR_ROVO = AttributesEnum.XxhrHmoMasterHdr_ROVO.index();
    public static final int XXPEREMPLOYEE_V_ROVO1 = AttributesEnum.XxperEmployee_V_ROVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxhrHmoHdr_VORowImpl() {
    }

    /**
     * Gets XxhrHmoHdr_EO entity object.
     * @return the XxhrHmoHdr_EO
     */
    public XxhrHmoHdr_EOImpl getXxhrHmoHdr_EO() {
        return (XxhrHmoHdr_EOImpl) getEntity(ENTITY_XXHRHMOHDR_EO);
    }

    /**
     * Gets the attribute value for ADDI_CATEGORY using the alias name AddiCategory.
     * @return the ADDI_CATEGORY
     */
    public String getAddiCategory() {
        return (String) getAttributeInternal(ADDICATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDI_CATEGORY using the alias name AddiCategory.
     * @param value value to set the ADDI_CATEGORY
     */
    public void setAddiCategory(String value) {
        setAttributeInternal(ADDICATEGORY, value);
    }

    /**
     * Gets the attribute value for ALTERNATE_EMAIL using the alias name AlternateEmail.
     * @return the ALTERNATE_EMAIL
     */
    public String getAlternateEmail() {
        return (String) getAttributeInternal(ALTERNATEEMAIL);
    }

    /**
     * Sets <code>value</code> as attribute value for ALTERNATE_EMAIL using the alias name AlternateEmail.
     * @param value value to set the ALTERNATE_EMAIL
     */
    public void setAlternateEmail(String value) {
        setAttributeInternal(ALTERNATEEMAIL, value);
    }

    /**
     * Gets the attribute value for APPROVAL_STATUS using the alias name ApprovalStatus.
     * @return the APPROVAL_STATUS
     */
    public String getApprovalStatus() {
        return (String) getAttributeInternal(APPROVALSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for APPROVAL_STATUS using the alias name ApprovalStatus.
     * @param value value to set the APPROVAL_STATUS
     */
    public void setApprovalStatus(String value) {
        setAttributeInternal(APPROVALSTATUS, value);
    }

    /**
     * Gets the attribute value for APPROVER_COMMENTS using the alias name ApproverComments.
     * @return the APPROVER_COMMENTS
     */
    public String getApproverComments() {
        return (String) getAttributeInternal(APPROVERCOMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for APPROVER_COMMENTS using the alias name ApproverComments.
     * @param value value to set the APPROVER_COMMENTS
     */
    public void setApproverComments(String value) {
        setAttributeInternal(APPROVERCOMMENTS, value);
    }

    /**
     * Gets the attribute value for BUSINESS_UNIT_ID using the alias name BusinessUnitId.
     * @return the BUSINESS_UNIT_ID
     */
    public BigDecimal getBusinessUnitId() {
        return (BigDecimal) getAttributeInternal(BUSINESSUNITID);
    }

    /**
     * Sets <code>value</code> as attribute value for BUSINESS_UNIT_ID using the alias name BusinessUnitId.
     * @param value value to set the BUSINESS_UNIT_ID
     */
    public void setBusinessUnitId(BigDecimal value) {
        setAttributeInternal(BUSINESSUNITID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for ERROR_MSG using the alias name ErrorMsg.
     * @return the ERROR_MSG
     */
    public ClobDomain getErrorMsg() {
        return (ClobDomain) getAttributeInternal(ERRORMSG);
    }

    /**
     * Sets <code>value</code> as attribute value for ERROR_MSG using the alias name ErrorMsg.
     * @param value value to set the ERROR_MSG
     */
    public void setErrorMsg(ClobDomain value) {
        setAttributeInternal(ERRORMSG, value);
    }

    /**
     * Gets the attribute value for GENDER using the alias name Gender.
     * @return the GENDER
     */
    public String getGender() {
        return (String) getAttributeInternal(GENDER);
    }

    /**
     * Sets <code>value</code> as attribute value for GENDER using the alias name Gender.
     * @param value value to set the GENDER
     */
    public void setGender(String value) {
        setAttributeInternal(GENDER, value);
    }

    /**
     * Gets the attribute value for HMO_ACCEPTANCE_FLAG using the alias name HmoAcceptanceFlag.
     * @return the HMO_ACCEPTANCE_FLAG
     */
    public String getHmoAcceptanceFlag() {
        return (String) getAttributeInternal(HMOACCEPTANCEFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_ACCEPTANCE_FLAG using the alias name HmoAcceptanceFlag.
     * @param value value to set the HMO_ACCEPTANCE_FLAG
     */
    public void setHmoAcceptanceFlag(String value) {
        setAttributeInternal(HMOACCEPTANCEFLAG, value);
    }

    /**
     * Gets the attribute value for HMO_CATEGORY using the alias name HmoCategory.
     * @return the HMO_CATEGORY
     */
    public String getHmoCategory() {
        return (String) getAttributeInternal(HMOCATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_CATEGORY using the alias name HmoCategory.
     * @param value value to set the HMO_CATEGORY
     */
    public void setHmoCategory(String value) {
        setAttributeInternal(HMOCATEGORY, value);
    }

    /**
     * Gets the attribute value for HMO_COPY_DEP_FLAG using the alias name HmoCopyDepFlag.
     * @return the HMO_COPY_DEP_FLAG
     */
    public String getHmoCopyDepFlag() {
        return (String) getAttributeInternal(HMOCOPYDEPFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_COPY_DEP_FLAG using the alias name HmoCopyDepFlag.
     * @param value value to set the HMO_COPY_DEP_FLAG
     */
    public void setHmoCopyDepFlag(String value) {
        setAttributeInternal(HMOCOPYDEPFLAG, value);
    }

    /**
     * Gets the attribute value for HMO_HDR_ID using the alias name HmoHdrId.
     * @return the HMO_HDR_ID
     */
    public BigDecimal getHmoHdrId() {
        return (BigDecimal) getAttributeInternal(HMOHDRID);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_HDR_ID using the alias name HmoHdrId.
     * @param value value to set the HMO_HDR_ID
     */
    public void setHmoHdrId(BigDecimal value) {
        setAttributeInternal(HMOHDRID, value);
    }

    /**
     * Gets the attribute value for HMO_MASTER_HDR_ID using the alias name HmoMasterHdrId.
     * @return the HMO_MASTER_HDR_ID
     */
    public BigDecimal getHmoMasterHdrId() {
        return (BigDecimal) getAttributeInternal(HMOMASTERHDRID);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_MASTER_HDR_ID using the alias name HmoMasterHdrId.
     * @param value value to set the HMO_MASTER_HDR_ID
     */
    public void setHmoMasterHdrId(BigDecimal value) {
        setAttributeInternal(HMOMASTERHDRID, value);
    }

    /**
     * Gets the attribute value for HMO_OPTION using the alias name HmoOption.
     * @return the HMO_OPTION
     */
    public String getHmoOption() {
        return (String) getAttributeInternal(HMOOPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_OPTION using the alias name HmoOption.
     * @param value value to set the HMO_OPTION
     */
    public void setHmoOption(String value) {
        setAttributeInternal(HMOOPTION, value);
    }

    /**
     * Gets the attribute value for HMO_PLAN_DEDUCTION using the alias name HmoPlanDeduction.
     * @return the HMO_PLAN_DEDUCTION
     */
    public BigDecimal getHmoPlanDeduction() {
        BigDecimal totalPlanAmount =
            (BigDecimal) (this.getHmoPlanTotal() == null ? new BigDecimal(0) : (BigDecimal) this.getHmoPlanTotal());
        BigDecimal eligibleCost =
            (BigDecimal) (this.getTrans_EligibleCost() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getTrans_EligibleCost());

        BigDecimal axaEligibleCost =
            (BigDecimal) (this.getTrans_AxaLbEligibleCost() == null ? new BigDecimal(0) :
                          (BigDecimal) this.getTrans_AxaLbEligibleCost());
        
        String hmoCategory = (String) (this.getHmoCategory() == null ? "" : (this.getHmoCategory().toString()));
        String hmoOptions = (String) (this.getHmoOption() == null ? "" : (this.getHmoOption().toString()));
        String hmoType = (String) (this.getHmoType() == null ? "" : (this.getHmoType().toString()));
        String statusValue = (String) (this.getApprovalStatus() == null ? "" : (this.getApprovalStatus().toString()));
        double a = totalPlanAmount.doubleValue();
        double b = eligibleCost.doubleValue();
        double c = axaEligibleCost.doubleValue();
        if("DRAFT".equals(statusValue)){
            if (("BUPA".equals(hmoType)  || "CIGNA".equals(hmoType)) || ("RELIANCE HEALTH".equals(hmoType) &&
                "Traditional Dependent Categorization".equals(hmoCategory)) ||
                ("Age-based Categorization".equals(hmoCategory) 
                 || "Plus Africa".equals(hmoCategory) || "Global Elite".equals(hmoCategory) &&
                 "Employee + Other Dependant".equals(hmoOptions))) {
                if (a >= b) {
                    return (BigDecimal) (totalPlanAmount.subtract(eligibleCost));

                } else {
                    return new BigDecimal(0);
                }
            } else {
                if (a >= c) {
                    return (BigDecimal) (totalPlanAmount.subtract(axaEligibleCost));

                } else {
                    return new BigDecimal(0);
                }
            }
        }else{
            return (BigDecimal) getAttributeInternal(HMOPLANDEDUCTION);
        }
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_PLAN_DEDUCTION using the alias name HmoPlanDeduction.
     * @param value value to set the HMO_PLAN_DEDUCTION
     */
    public void setHmoPlanDeduction(BigDecimal value) {
        setAttributeInternal(HMOPLANDEDUCTION, value);
    }

    /**
     * Gets the attribute value for HMO_PLAN_TOTAL using the alias name HmoPlanTotal.
     * @return the HMO_PLAN_TOTAL
     */
    public BigDecimal getHmoPlanTotal() {
        BigDecimal totVal = new BigDecimal(0);
        String hmoCateg = (String) (this.getHmoCategory() == null ? "" : (this.getHmoCategory().toString()));
        String hmoOptions = (String) (this.getHmoOption() == null ? "" : (this.getHmoOption().toString()));
        String hmoType = (String) (this.getHmoType() == null ? "" : (this.getHmoType().toString()));
        String statusValue = (String) (this.getApprovalStatus() == null ? "" : (this.getApprovalStatus().toString()));
        RowIterator rs = getXxhrHmoDtl_VO();
        int rowCount = getXxhrHmoDtl_VO().getRowCount();
        BigDecimal totEmpCost =
            (BigDecimal) (this.getTrans_EmpCost() == null ? new BigDecimal(0) : (BigDecimal) this.getTrans_EmpCost());

        if("DRAFT".equals(statusValue)){
            if (!"Traditional Dependent Categorization".equals(hmoCateg)) {
                if (rowCount != 0) {
                    totVal = totEmpCost.add(totVal);
                }
                while (rs.hasNext()) {
                    Row r = rs.next();
                    if (rowCount == 0) {
                        totVal =
                            totEmpCost.add(r.getAttribute("DependentCost") == null ? new BigDecimal(0) :
                                           (BigDecimal) r.getAttribute("DependentCost"));
                    } else {
                        totVal =
                            totVal.add(r.getAttribute("DependentCost") == null ? new BigDecimal(0) :
                                       (BigDecimal) r.getAttribute("DependentCost"));
                    }

                    // totVal= totVal.add(totPlanAmt);

                }
                if (hmoOptions.equals("Employee Only") || "EMP_ONLY".equals(hmoOptions)) {
                    totVal = totEmpCost;
                }
                return totVal;
            } else {
                while (rs.hasNext()) {
                    Row r = rs.next();
                    totVal =
                        (r.getAttribute("DependentCost") == null ? new BigDecimal(0) :
                         (BigDecimal) r.getAttribute("DependentCost"));

                }
                if ("AXAMANSARD HEALTH".equals(hmoType) || "RELIANCE HEALTH".equals(hmoType)) {
                    if ("Traditional Dependent Categorization".equals(hmoCateg)) {
                        if (hmoOptions.equals("Employee Only") || "EMP_ONLY".equals(hmoOptions)) {
                            totVal = totEmpCost;
                        }
                    }

                }
                return totVal;
            }
        } else {
            return (BigDecimal) getAttributeInternal(HMOPLANTOTAL);
        }

    }

    /**
     * Sets <code>value</code> as attribute value for HMO_PLAN_TOTAL using the alias name HmoPlanTotal.
     * @param value value to set the HMO_PLAN_TOTAL
     */
    public void setHmoPlanTotal(BigDecimal value) {
        setAttributeInternal(HMOPLANTOTAL, value);
    }

    /**
     * Gets the attribute value for HMO_REQUEST_DATE using the alias name HmoRequestDate.
     * @return the HMO_REQUEST_DATE
     */
    public Timestamp getHmoRequestDate() {
        return (Timestamp) getAttributeInternal(HMOREQUESTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_REQUEST_DATE using the alias name HmoRequestDate.
     * @param value value to set the HMO_REQUEST_DATE
     */
    public void setHmoRequestDate(Timestamp value) {
        setAttributeInternal(HMOREQUESTDATE, value);
    }

    /**
     * Gets the attribute value for HMO_REQUEST_NO using the alias name HmoRequestNo.
     * @return the HMO_REQUEST_NO
     */
    public String getHmoRequestNo() {
        return (String) getAttributeInternal(HMOREQUESTNO);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_REQUEST_NO using the alias name HmoRequestNo.
     * @param value value to set the HMO_REQUEST_NO
     */
    public void setHmoRequestNo(String value) {
        setAttributeInternal(HMOREQUESTNO, value);
    }

    /**
     * Gets the attribute value for HMO_TRANS_REFERENCE using the alias name HmoTransReference.
     * @return the HMO_TRANS_REFERENCE
     */
    public BigDecimal getHmoTransReference() {
        return (BigDecimal) getAttributeInternal(HMOTRANSREFERENCE);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_TRANS_REFERENCE using the alias name HmoTransReference.
     * @param value value to set the HMO_TRANS_REFERENCE
     */
    public void setHmoTransReference(BigDecimal value) {
        setAttributeInternal(HMOTRANSREFERENCE, value);
    }

    /**
     * Gets the attribute value for HMO_TYPE using the alias name HmoType.
     * @return the HMO_TYPE
     */
    public String getHmoType() {
        return (String) getAttributeInternal(HMOTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_TYPE using the alias name HmoType.
     * @param value value to set the HMO_TYPE
     */
    public void setHmoType(String value) {
        setAttributeInternal(HMOTYPE, value);
    }

    /**
     * Gets the attribute value for HOSPITAL using the alias name Hospital.
     * @return the HOSPITAL
     */
    public String getHospital() {
        return (String) getAttributeInternal(HOSPITAL);
    }

    /**
     * Sets <code>value</code> as attribute value for HOSPITAL using the alias name Hospital.
     * @param value value to set the HOSPITAL
     */
    public void setHospital(String value) {
        setAttributeInternal(HOSPITAL, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @param value value to set the LAST_UPDATE_LOGIN
     */
    public void setLastUpdateLogin(String value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for MARITAL_STATUS using the alias name MaritalStatus.
     * @return the MARITAL_STATUS
     */
    public String getMaritalStatus() {
        return (String) getAttributeInternal(MARITALSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for MARITAL_STATUS using the alias name MaritalStatus.
     * @param value value to set the MARITAL_STATUS
     */
    public void setMaritalStatus(String value) {
        setAttributeInternal(MARITALSTATUS, value);
    }

    /**
     * Gets the attribute value for MOBILE_NO using the alias name MobileNo.
     * @return the MOBILE_NO
     */
    public String getMobileNo() {
        return (String) getAttributeInternal(MOBILENO);
    }

    /**
     * Sets <code>value</code> as attribute value for MOBILE_NO using the alias name MobileNo.
     * @param value value to set the MOBILE_NO
     */
    public void setMobileNo(String value) {
        setAttributeInternal(MOBILENO, value);
    }

    /**
     * Gets the attribute value for PAYROLL_BATCH_NAME using the alias name PayrollBatchName.
     * @return the PAYROLL_BATCH_NAME
     */
    public String getPayrollBatchName() {
        return (String) getAttributeInternal(PAYROLLBATCHNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PAYROLL_BATCH_NAME using the alias name PayrollBatchName.
     * @param value value to set the PAYROLL_BATCH_NAME
     */
    public void setPayrollBatchName(String value) {
        setAttributeInternal(PAYROLLBATCHNAME, value);
    }

    /**
     * Gets the attribute value for PERSON_ID using the alias name PersonId.
     * @return the PERSON_ID
     */
    public BigDecimal getPersonId() {
        return (BigDecimal) getAttributeInternal(PERSONID);
    }

    /**
     * Sets <code>value</code> as attribute value for PERSON_ID using the alias name PersonId.
     * @param value value to set the PERSON_ID
     */
    public void setPersonId(BigDecimal value) {
        setAttributeInternal(PERSONID, value);
    }

    /**
     * Gets the attribute value for PHOTO using the alias name Photo.
     * @return the PHOTO
     */
    public BlobDomain getPhoto() {
        return (BlobDomain) getAttributeInternal(PHOTO);
    }

    /**
     * Sets <code>value</code> as attribute value for PHOTO using the alias name Photo.
     * @param value value to set the PHOTO
     */
    public void setPhoto(BlobDomain value) {
        setAttributeInternal(PHOTO, value);
    }

    /**
     * Gets the attribute value for PHOTO_CLOB using the alias name PhotoClob.
     * @return the PHOTO_CLOB
     */
    public ClobDomain getPhotoClob() {
        return (ClobDomain) getAttributeInternal(PHOTOCLOB);
    }

    /**
     * Sets <code>value</code> as attribute value for PHOTO_CLOB using the alias name PhotoClob.
     * @param value value to set the PHOTO_CLOB
     */
    public void setPhotoClob(ClobDomain value) {
        setAttributeInternal(PHOTOCLOB, value);
    }

    /**
     * Gets the attribute value for RESI_ADDRESS using the alias name ResiAddress.
     * @return the RESI_ADDRESS
     */
    public String getResiAddress() {
        return (String) getAttributeInternal(RESIADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for RESI_ADDRESS using the alias name ResiAddress.
     * @param value value to set the RESI_ADDRESS
     */
    public void setResiAddress(String value) {
        setAttributeInternal(RESIADDRESS, value);
    }

    /**
     * Gets the attribute value for SOA_FLOWID using the alias name SoaFlowid.
     * @return the SOA_FLOWID
     */
    public BigDecimal getSoaFlowid() {
        return (BigDecimal) getAttributeInternal(SOAFLOWID);
    }

    /**
     * Sets <code>value</code> as attribute value for SOA_FLOWID using the alias name SoaFlowid.
     * @param value value to set the SOA_FLOWID
     */
    public void setSoaFlowid(BigDecimal value) {
        setAttributeInternal(SOAFLOWID, value);
    }

    /**
     * Gets the attribute value for STATE_OF_RESIDENCE using the alias name StateOfResidence.
     * @return the STATE_OF_RESIDENCE
     */
    public String getStateOfResidence() {
        return (String) getAttributeInternal(STATEOFRESIDENCE);
    }

    /**
     * Sets <code>value</code> as attribute value for STATE_OF_RESIDENCE using the alias name StateOfResidence.
     * @param value value to set the STATE_OF_RESIDENCE
     */
    public void setStateOfResidence(String value) {
        setAttributeInternal(STATEOFRESIDENCE, value);
    }

    /**
     * Gets the attribute value for REQUEST_TYPE using the alias name RequestType.
     * @return the REQUEST_TYPE
     */
    public String getRequestType() {
        return (String) getAttributeInternal(REQUESTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for REQUEST_TYPE using the alias name RequestType.
     * @param value value to set the REQUEST_TYPE
     */
    public void setRequestType(String value) {
        setAttributeInternal(REQUESTTYPE, value);
    }

    /**
     * Gets the attribute value for ACTIVE_FLAG using the alias name ActiveFlag.
     * @return the ACTIVE_FLAG
     */
    public String getActiveFlag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVE_FLAG using the alias name ActiveFlag.
     * @param value value to set the ACTIVE_FLAG
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for HMO_PLAN_NAME using the alias name HmoPlanName.
     * @return the HMO_PLAN_NAME
     */
    public String getHmoPlanName() {
        return (String) getAttributeInternal(HMOPLANNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_PLAN_NAME using the alias name HmoPlanName.
     * @param value value to set the HMO_PLAN_NAME
     */
    public void setHmoPlanName(String value) {
        setAttributeInternal(HMOPLANNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_EligibleCost.
     * @return the Trans_EligibleCost
     */
    public BigDecimal getTrans_EligibleCost() {
        BigDecimal cost = new BigDecimal(0);
        if (getHmoMasterHdrId() != null) {

            String categoryIdd = this.getHmoCategory();
            String depOption = this.getHmoOption();
            String option = this.getHmoType();

            ViewRowSetImpl vo = (ViewRowSetImpl) getMaximumEligibleCost_ROVO();
            ViewObject vo1 = vo.getViewObject();
            ViewCriteria vc1 = vo1.createViewCriteria();
            ViewCriteriaRow vcr = vc1.createViewCriteriaRow();
            vcr.setAttribute("HmoCategory", categoryIdd);
            vc1.addRow(vcr);
            vcr.setAttribute("HmoOptions", option);
            vc1.addRow(vcr);
            vcr.setAttribute("DependentOptions", depOption);
            vc1.addRow(vcr);
            vo1.applyViewCriteria(vc1);
            vo1.executeQuery();

            Row rw = vo1.first();
            if (rw != null) {
                cost = (BigDecimal) rw.getAttribute("MaxEligibiltyCost");
            }
            return cost;
        } else {
            return (BigDecimal) getAttributeInternal(TRANS_ELIGIBLECOST);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_EligibleCost.
     * @param value value to set the  Trans_EligibleCost
     */
    public void setTrans_EligibleCost(BigDecimal value) {
        setAttributeInternal(TRANS_ELIGIBLECOST, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_AxaLbEligibleCost.
     * @return the Trans_AxaLbEligibleCost
     */
    public BigDecimal getTrans_AxaLbEligibleCost() {
        Number id = new Number(0);
        BigDecimal cost = null;
        if (getHmoMasterHdrId() != null) {
            try {
                id = new Number(getHmoMasterHdrId());
            } catch (SQLException e) {
            }
            ViewRowSetImpl vo = (ViewRowSetImpl) getXxhrHmoMasterHdr_ROVO();
            ViewObject vo1 = vo.getViewObject();
            ViewCriteria vc1 = vo1.createViewCriteria();
            ViewCriteriaRow vcr = vc1.createViewCriteriaRow();
            vcr.setAttribute("HmoMasterHdrId", id);
            vc1.addRow(vcr);
            vo1.applyViewCriteria(vc1);
            vo1.executeQuery();
            if (vo1.getEstimatedRowCount() > 0) {
                Row rw = vo1.first();
                cost = (BigDecimal) rw.getAttribute("AxaLbEligibleCost");
            }

            return cost;
        } else {
            return (BigDecimal) getAttributeInternal(TRANS_AXALBELIGIBLECOST);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_AxaLbEligibleCost.
     * @param value value to set the  Trans_AxaLbEligibleCost
     */
    public void setTrans_AxaLbEligibleCost(BigDecimal value) {
        setAttributeInternal(TRANS_AXALBELIGIBLECOST, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_EmpCost.
     * @return the Trans_EmpCost
     */
    public BigDecimal getTrans_EmpCost() {
        return (BigDecimal) getAttributeInternal(TRANS_EMPCOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_EmpCost.
     * @param value value to set the  Trans_EmpCost
     */
    public void setTrans_EmpCost(BigDecimal value) {
        setAttributeInternal(TRANS_EMPCOST, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_DateofBirth.
     * @return the Trans_DateofBirth
     */
    public String getTrans_DateofBirth() { 
        String name = null;
        if (getPersonId() != null) { 
            
            BigDecimal number = getPersonId();
            ViewRowSetImpl vo = (ViewRowSetImpl) getXxperEmployee_V_ROVO1();
            ViewObject vo1 = vo.getViewObject();
            ViewCriteria vc1 = vo1.createViewCriteria();
            ViewCriteriaRow vcr = vc1.createViewCriteriaRow();
            vcr.setAttribute("PersonId", number);
            vc1.addRow(vcr);
            vo1.applyViewCriteria(vc1);
            vo1.executeQuery();
            if (vo1.getEstimatedRowCount() > 0) {
                Row rw = vo1.first();
                name = rw.getAttribute("DateOfBirth") != null ? rw.getAttribute("DateOfBirth").toString() : "";
            }
            return name;
        } else {
            return (String) getAttributeInternal(TRANS_DATEOFBIRTH);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_DateofBirth.
     * @param value value to set the  Trans_DateofBirth
     */
    public void setTrans_DateofBirth(String value) {
        setAttributeInternal(TRANS_DATEOFBIRTH, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxhrHmoDtl_VO.
     */
    public RowIterator getXxhrHmoDtl_VO() {
        return (RowIterator) getAttributeInternal(XXHRHMODTL_VO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> FetchDepOption_ROVO.
     */
    public RowSet getFetchDepOption_ROVO() {
        return (RowSet) getAttributeInternal(FETCHDEPOPTION_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MaximumEligibleCost_ROVO.
     */
    public RowSet getMaximumEligibleCost_ROVO() {
        return (RowSet) getAttributeInternal(MAXIMUMELIGIBLECOST_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XxhrHmoMasterHdr_ROVO.
     */
    public RowSet getXxhrHmoMasterHdr_ROVO() {
        return (RowSet) getAttributeInternal(XXHRHMOMASTERHDR_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XxperEmployee_V_ROVO1.
     */
    public RowSet getXxperEmployee_V_ROVO1() {
        return (RowSet) getAttributeInternal(XXPEREMPLOYEE_V_ROVO1);
    }
}

