package model.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import model.eo.XxhrHmoTrxDtl_EOImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 23 12:44:34 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxhrHmoTrxDtl_EOViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_XXHRHMOTRXDTL_EO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        HmoTrxDtlId,
        HmoTrxHdrId,
        DependentType,
        DependentClass,
        DepDob,
        DepGender,
        DepTitle,
        DepAgeCategory,
        DepFirstName,
        DepLastName,
        ResiAddress,
        PersonId,
        MobileNo,
        MaritalStatus,
        ResidentialAddress,
        StateOfResidence,
        Hospital,
        DependentCost,
        CreatedBy,
        LastUpdatedBy,
        LastUpdateDate,
        LastUpdateLogin,
        DepPhoto,
        CreationDate,
        SelfDep_LOV,
        OthersDep_LOV,
        Code_Trans,
        HmoDetailRowStatus,
        trans_Hmotype,
        Trans_depOptionLov,
        DepPhotoClob,
        EvidenceCount,
        XxhrHmoTrxHdr_EOView,
        XxfndAttachment_EOView,
        SelfDependent_ROVO,
        Title_LOV,
        DepGender_LOV,
        DepMaritalStatus_LOV,
        OtherDep_LOV,
        XxhrHmoTrxDtl_EOView,
        Hospital_ROVO,
        State_ROVO,
        XxhrHmoTrxHdr_ROVO1,
        XxhrHmoTrxHdr,
        FetchHospital_ROVO,
        StateOfResidence_ROVO;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HMOTRXDTLID = AttributesEnum.HmoTrxDtlId.index();
    public static final int HMOTRXHDRID = AttributesEnum.HmoTrxHdrId.index();
    public static final int DEPENDENTTYPE = AttributesEnum.DependentType.index();
    public static final int DEPENDENTCLASS = AttributesEnum.DependentClass.index();
    public static final int DEPDOB = AttributesEnum.DepDob.index();
    public static final int DEPGENDER = AttributesEnum.DepGender.index();
    public static final int DEPTITLE = AttributesEnum.DepTitle.index();
    public static final int DEPAGECATEGORY = AttributesEnum.DepAgeCategory.index();
    public static final int DEPFIRSTNAME = AttributesEnum.DepFirstName.index();
    public static final int DEPLASTNAME = AttributesEnum.DepLastName.index();
    public static final int RESIADDRESS = AttributesEnum.ResiAddress.index();
    public static final int PERSONID = AttributesEnum.PersonId.index();
    public static final int MOBILENO = AttributesEnum.MobileNo.index();
    public static final int MARITALSTATUS = AttributesEnum.MaritalStatus.index();
    public static final int RESIDENTIALADDRESS = AttributesEnum.ResidentialAddress.index();
    public static final int STATEOFRESIDENCE = AttributesEnum.StateOfResidence.index();
    public static final int HOSPITAL = AttributesEnum.Hospital.index();
    public static final int DEPENDENTCOST = AttributesEnum.DependentCost.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int DEPPHOTO = AttributesEnum.DepPhoto.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int SELFDEP_LOV = AttributesEnum.SelfDep_LOV.index();
    public static final int OTHERSDEP_LOV = AttributesEnum.OthersDep_LOV.index();
    public static final int CODE_TRANS = AttributesEnum.Code_Trans.index();
    public static final int HMODETAILROWSTATUS = AttributesEnum.HmoDetailRowStatus.index();
    public static final int TRANS_HMOTYPE = AttributesEnum.trans_Hmotype.index();
    public static final int TRANS_DEPOPTIONLOV = AttributesEnum.Trans_depOptionLov.index();
    public static final int DEPPHOTOCLOB = AttributesEnum.DepPhotoClob.index();
    public static final int EVIDENCECOUNT = AttributesEnum.EvidenceCount.index();
    public static final int XXHRHMOTRXHDR_EOVIEW = AttributesEnum.XxhrHmoTrxHdr_EOView.index();
    public static final int XXFNDATTACHMENT_EOVIEW = AttributesEnum.XxfndAttachment_EOView.index();
    public static final int SELFDEPENDENT_ROVO = AttributesEnum.SelfDependent_ROVO.index();
    public static final int TITLE_LOV = AttributesEnum.Title_LOV.index();
    public static final int DEPGENDER_LOV = AttributesEnum.DepGender_LOV.index();
    public static final int DEPMARITALSTATUS_LOV = AttributesEnum.DepMaritalStatus_LOV.index();
    public static final int OTHERDEP_LOV = AttributesEnum.OtherDep_LOV.index();
    public static final int XXHRHMOTRXDTL_EOVIEW = AttributesEnum.XxhrHmoTrxDtl_EOView.index();
    public static final int HOSPITAL_ROVO = AttributesEnum.Hospital_ROVO.index();
    public static final int STATE_ROVO = AttributesEnum.State_ROVO.index();
    public static final int XXHRHMOTRXHDR_ROVO1 = AttributesEnum.XxhrHmoTrxHdr_ROVO1.index();
    public static final int XXHRHMOTRXHDR = AttributesEnum.XxhrHmoTrxHdr.index();
    public static final int FETCHHOSPITAL_ROVO = AttributesEnum.FetchHospital_ROVO.index();
    public static final int STATEOFRESIDENCE_ROVO = AttributesEnum.StateOfResidence_ROVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxhrHmoTrxDtl_EOViewRowImpl() {
    }

    /**
     * Gets XxhrHmoTrxDtl_EO entity object.
     * @return the XxhrHmoTrxDtl_EO
     */
    public XxhrHmoTrxDtl_EOImpl getXxhrHmoTrxDtl_EO() {
        return (XxhrHmoTrxDtl_EOImpl) getEntity(ENTITY_XXHRHMOTRXDTL_EO);
    }

    /**
     * Gets the attribute value for HMO_TRX_DTL_ID using the alias name HmoTrxDtlId.
     * @return the HMO_TRX_DTL_ID
     */
    public DBSequence getHmoTrxDtlId() {
        return (DBSequence) getAttributeInternal(HMOTRXDTLID);
    }

    /**
     * Gets the attribute value for HMO_TRX_HDR_ID using the alias name HmoTrxHdrId.
     * @return the HMO_TRX_HDR_ID
     */
    public Number getHmoTrxHdrId() {
        return (Number) getAttributeInternal(HMOTRXHDRID);
    }

    /**
     * Sets <code>value</code> as attribute value for HMO_TRX_HDR_ID using the alias name HmoTrxHdrId.
     * @param value value to set the HMO_TRX_HDR_ID
     */
    public void setHmoTrxHdrId(Number value) {
        setAttributeInternal(HMOTRXHDRID, value);
    }

    /**
     * Gets the attribute value for DEPENDENT_TYPE using the alias name DependentType.
     * @return the DEPENDENT_TYPE
     */
    public String getDependentType() {
        return (String) getAttributeInternal(DEPENDENTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPENDENT_TYPE using the alias name DependentType.
     * @param value value to set the DEPENDENT_TYPE
     */
    public void setDependentType(String value) {
        setAttributeInternal(DEPENDENTTYPE, value);
    }

    /**
     * Gets the attribute value for DEPENDENT_CLASS using the alias name DependentClass.
     * @return the DEPENDENT_CLASS
     */
    public String getDependentClass() {
        return (String) getAttributeInternal(DEPENDENTCLASS);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPENDENT_CLASS using the alias name DependentClass.
     * @param value value to set the DEPENDENT_CLASS
     */
    public void setDependentClass(String value) {
        setAttributeInternal(DEPENDENTCLASS, value);
    }

    /**
     * Gets the attribute value for DEP_DOB using the alias name DepDob.
     * @return the DEP_DOB
     */
    public Timestamp getDepDob() {        
        return (Timestamp) getAttributeInternal(DEPDOB);
    }

    /**
     * Sets <code>value</code> as attribute value for DEP_DOB using the alias name DepDob.
     * @param value value to set the DEP_DOB
     */
    public void setDepDob(Timestamp value) {
        setAttributeInternal(DEPDOB, value);
    }

    /**
     * Gets the attribute value for DEP_GENDER using the alias name DepGender.
     * @return the DEP_GENDER
     */
    public String getDepGender() {
        return (String) getAttributeInternal(DEPGENDER);
    }

    /**
     * Sets <code>value</code> as attribute value for DEP_GENDER using the alias name DepGender.
     * @param value value to set the DEP_GENDER
     */
    public void setDepGender(String value) {
        setAttributeInternal(DEPGENDER, value);
    }

    /**
     * Gets the attribute value for DEP_TITLE using the alias name DepTitle.
     * @return the DEP_TITLE
     */
    public String getDepTitle() {
        return (String) getAttributeInternal(DEPTITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for DEP_TITLE using the alias name DepTitle.
     * @param value value to set the DEP_TITLE
     */
    public void setDepTitle(String value) {
        setAttributeInternal(DEPTITLE, value);
    }

    /**
     * Gets the attribute value for DEP_AGE_CATEGORY using the alias name DepAgeCategory.
     * @return the DEP_AGE_CATEGORY
     */
    public String getDepAgeCategory() {
        return (String) getAttributeInternal(DEPAGECATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for DEP_AGE_CATEGORY using the alias name DepAgeCategory.
     * @param value value to set the DEP_AGE_CATEGORY
     */
    public void setDepAgeCategory(String value) {
        setAttributeInternal(DEPAGECATEGORY, value);
    }

    /**
     * Gets the attribute value for DEP_FIRST_NAME using the alias name DepFirstName.
     * @return the DEP_FIRST_NAME
     */
    public String getDepFirstName() {
        return (String) getAttributeInternal(DEPFIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for DEP_FIRST_NAME using the alias name DepFirstName.
     * @param value value to set the DEP_FIRST_NAME
     */
    public void setDepFirstName(String value) {
        setAttributeInternal(DEPFIRSTNAME, value);
    }

    /**
     * Gets the attribute value for DEP_LAST_NAME using the alias name DepLastName.
     * @return the DEP_LAST_NAME
     */
    public String getDepLastName() {
        return (String) getAttributeInternal(DEPLASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for DEP_LAST_NAME using the alias name DepLastName.
     * @param value value to set the DEP_LAST_NAME
     */
    public void setDepLastName(String value) {
        setAttributeInternal(DEPLASTNAME, value);
    }

    /**
     * Gets the attribute value for RESI_ADDRESS using the alias name ResiAddress.
     * @return the RESI_ADDRESS
     */
    public String getResiAddress() {
        return (String) getAttributeInternal(RESIADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for RESI_ADDRESS using the alias name ResiAddress.
     * @param value value to set the RESI_ADDRESS
     */
    public void setResiAddress(String value) {
        setAttributeInternal(RESIADDRESS, value);
    }

    /**
     * Gets the attribute value for PERSON_ID using the alias name PersonId.
     * @return the PERSON_ID
     */
    public Number getPersonId() {
        return (Number) getAttributeInternal(PERSONID);
    }

    /**
     * Sets <code>value</code> as attribute value for PERSON_ID using the alias name PersonId.
     * @param value value to set the PERSON_ID
     */
    public void setPersonId(Number value) {
        setAttributeInternal(PERSONID, value);
    }

    /**
     * Gets the attribute value for MOBILE_NO using the alias name MobileNo.
     * @return the MOBILE_NO
     */
    public String getMobileNo() {
        return (String) getAttributeInternal(MOBILENO);
    }

    /**
     * Sets <code>value</code> as attribute value for MOBILE_NO using the alias name MobileNo.
     * @param value value to set the MOBILE_NO
     */
    public void setMobileNo(String value) {
        setAttributeInternal(MOBILENO, value);
    }

    /**
     * Gets the attribute value for MARITAL_STATUS using the alias name MaritalStatus.
     * @return the MARITAL_STATUS
     */
    public String getMaritalStatus() {
        return (String) getAttributeInternal(MARITALSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for MARITAL_STATUS using the alias name MaritalStatus.
     * @param value value to set the MARITAL_STATUS
     */
    public void setMaritalStatus(String value) {
        setAttributeInternal(MARITALSTATUS, value);
    }

    /**
     * Gets the attribute value for RESIDENTIAL_ADDRESS using the alias name ResidentialAddress.
     * @return the RESIDENTIAL_ADDRESS
     */
    public String getResidentialAddress() {
        return (String) getAttributeInternal(RESIDENTIALADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for RESIDENTIAL_ADDRESS using the alias name ResidentialAddress.
     * @param value value to set the RESIDENTIAL_ADDRESS
     */
    public void setResidentialAddress(String value) {
        setAttributeInternal(RESIDENTIALADDRESS, value);
    }

    /**
     * Gets the attribute value for STATE_OF_RESIDENCE using the alias name StateOfResidence.
     * @return the STATE_OF_RESIDENCE
     */
    public String getStateOfResidence() {
        return (String) getAttributeInternal(STATEOFRESIDENCE);
    }

    /**
     * Sets <code>value</code> as attribute value for STATE_OF_RESIDENCE using the alias name StateOfResidence.
     * @param value value to set the STATE_OF_RESIDENCE
     */
    public void setStateOfResidence(String value) {
        setAttributeInternal(STATEOFRESIDENCE, value);
    }

    /**
     * Gets the attribute value for HOSPITAL using the alias name Hospital.
     * @return the HOSPITAL
     */
    public String getHospital() {
        return (String) getAttributeInternal(HOSPITAL);
    }

    /**
     * Sets <code>value</code> as attribute value for HOSPITAL using the alias name Hospital.
     * @param value value to set the HOSPITAL
     */
    public void setHospital(String value) {
        setAttributeInternal(HOSPITAL, value);
    }

    /**
     * Gets the attribute value for DEPENDENT_COST using the alias name DependentCost.
     * @return the DEPENDENT_COST
     */
    public BigDecimal getDependentCost() {
        return (BigDecimal) getAttributeInternal(DEPENDENTCOST);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPENDENT_COST using the alias name DependentCost.
     * @param value value to set the DEPENDENT_COST
     */
    public void setDependentCost(BigDecimal value) {
        setAttributeInternal(DEPENDENTCOST, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }


    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_LOGIN using the alias name LastUpdateLogin.
     * @return the LAST_UPDATE_LOGIN
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Gets the attribute value for DEP_PHOTO using the alias name DepPhoto.
     * @return the DEP_PHOTO
     */
    public BlobDomain getDepPhoto() {
        return (BlobDomain) getAttributeInternal(DEPPHOTO);
    }

    /**
     * Sets <code>value</code> as attribute value for DEP_PHOTO using the alias name DepPhoto.
     * @param value value to set the DEP_PHOTO
     */
    public void setDepPhoto(BlobDomain value) {
        setAttributeInternal(DEPPHOTO, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for the calculated attribute SelfDep_LOV.
     * @return the SelfDep_LOV
     */
    public String getSelfDep_LOV() {
//        String depType = null;
//        String deptName = null;
//        if (getDependentType() != null){
//            depType = getDependentType();
//            System.out.println("DepttypeSELF -------- " + depType);
////            Row[] orgRows;
////            orgRows = getSelfDependent_ROVO().getFilteredRows("ContactType", depType);
////            System.out.println("orgRows.length ---- " + orgRows.length );
////            if (orgRows.length > 0) {    
////                deptName = orgRows[0].getAttribute("ContactTypeName").toString();
////            }
//            ViewRowSetImpl vo = (ViewRowSetImpl) getSelfDependent_ROVO();
//            ViewObject vo1 = vo.getViewObject();
//            ViewCriteria vc1 = vo1.createViewCriteria();
//            ViewCriteriaRow vcr = vc1.createViewCriteriaRow();
//            vcr.setAttribute("ContactType", depType);
//            vc1.addRow(vcr);
//            vo1.applyViewCriteria(vc1);
//            vo1.executeQuery();
//            if(vo1.getEstimatedRowCount() > 0){
//                Row rw = vo1.first();
//                deptName = rw.getAttribute("ContactTypeName") == null ? "" : rw.getAttribute("ContactTypeName").toString();
//            }
//            return deptName;
//        }else{
//        oracle.jbo.domain.Number type = null;
//        String name = null;
//        if (getPersonId() != null) {
//            type = getPersonId();            
//            Row[] orgRows;
//            orgRows = getSelfDependent_ROVO().getFilteredRows("PersonId", type);
//            if (orgRows.length > 0) {                
//            //    name = orgRows[0].getAttribute("ContactTypeName").toString();
//            }
//            return name;
//        } else {
            return (String) getAttributeInternal(SELFDEP_LOV);
//        }
       // }


    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SelfDep_LOV.
     * @param value value to set the  SelfDep_LOV
     */
    public void setSelfDep_LOV(String value) {
        setAttributeInternal(SELFDEP_LOV, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OthersDep_LOV.
     * @return the OthersDep_LOV
     */
    public String getOthersDep_LOV() {
//  String depType = null;
//        String depName = null;
//        if (getDependentType() != null) {
//            depType = getDependentType();
//            System.out.println("Depttype -------- " + depType);
////            Row[] orgRows;
////            orgRows = getOtherDep_LOV().getFilteredRows("LookupValueCode", depType);
////            System.out.println("orgRows.length ---- " + orgRows.length);
////            if (orgRows.length > 0) {
////                depName = orgRows[0].getAttribute("LookupValueNameDisp").toString();
////            }
//            ViewRowSetImpl vo = (ViewRowSetImpl) getOtherDep_LOV();
//            ViewObject vo1 = vo.getViewObject();
//            ViewCriteria vc1 = vo1.createViewCriteria();
//            ViewCriteriaRow vcr = vc1.createViewCriteriaRow();
//            vcr.setAttribute("LookupValueCode", depType);
//            vc1.addRow(vcr);
//            vo1.applyViewCriteria(vc1);
//            vo1.executeQuery();
//            if(vo1.getEstimatedRowCount() > 0){
//                Row rw = vo1.first();
//                depName = rw.getAttribute("LookupValueNameDisp") == null ? "" : rw.getAttribute("LookupValueNameDisp").toString();
//            }
//            return depName;
//        } else {
            return (String) getAttributeInternal(OTHERSDEP_LOV);
//        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OthersDep_LOV.
     * @param value value to set the  OthersDep_LOV
     */
    public void setOthersDep_LOV(String value) {
        setAttributeInternal(OTHERSDEP_LOV, value);
    }


    /**
     * Gets the attribute value for CODE_TRANS using the alias name Code_Trans.
     * @return the CODE_TRANS
     */
    public String getCode_Trans() {
        return (String) getAttributeInternal(CODE_TRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute HmoDetailRowStatus.
     * @return the HmoDetailRowStatus
     */
    public Integer getHmoDetailRowStatus() {
        byte entityState = this.getEntity(0).getEntityState();
        return new Integer(entityState);
    }

    /**
     * Gets the attribute value for the calculated attribute trans_Hmotype.
     * @return the trans_Hmotype
     */
    public String gettrans_Hmotype() {
        Number VendId = null;
         String OfferNumber = null;
         if (getHmoTrxHdrId() != null) {
             VendId = getHmoTrxHdrId();
        //             Row[] deptRows;
        //             deptRows = getXxhrHmoTrxHdr().getFilteredRows("HmoTrxHdrId", VendId);
        //             if (deptRows.length > 0) {
        //                 OfferNumber = deptRows[0].getAttribute("HmoOption")==null?"ALL":deptRows[0].getAttribute("HmoOption").toString();
        //             System.err.println("getTrans_depOptionLov"+OfferNumber);
        //             }
             ViewRowSetImpl vo = (ViewRowSetImpl) getXxhrHmoTrxHdr();
             ViewObject vo1 = vo.getViewObject();
             ViewCriteria vc1 = vo1.createViewCriteria();
             ViewCriteriaRow vcr = vc1.createViewCriteriaRow();
             vcr.setAttribute("HmoTrxHdrId", VendId);
             vc1.addRow(vcr);
             vo1.applyViewCriteria(vc1);
             vo1.executeQuery();
             if(vo1.getEstimatedRowCount() > 0){
                 Row rw = vo1.first();
                 OfferNumber = rw.getAttribute("HmoType") == null ? "" : rw.getAttribute("HmoType").toString();
             }
             
             return OfferNumber;
        
         } else {
        return (String) getAttributeInternal(TRANS_HMOTYPE);
    }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute trans_Hmotype.
     * @param value value to set the  trans_Hmotype
     */
    public void settrans_Hmotype(String value) {
        setAttributeInternal(TRANS_HMOTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_depOptionLov.
     * @return the Trans_depOptionLov
     */
    public String getTrans_depOptionLov() {
        Number VendId = null;
         String OfferNumber = null;
         if (getHmoTrxHdrId() != null) {
             VendId = getHmoTrxHdrId();
//             Row[] deptRows;
//             deptRows = getXxhrHmoTrxHdr().getFilteredRows("HmoTrxHdrId", VendId);
//             if (deptRows.length > 0) {
//                 OfferNumber = deptRows[0].getAttribute("HmoOption")==null?"ALL":deptRows[0].getAttribute("HmoOption").toString();
//             System.err.println("getTrans_depOptionLov"+OfferNumber);
//             }
             ViewRowSetImpl vo = (ViewRowSetImpl) getXxhrHmoTrxHdr();
             ViewObject vo1 = vo.getViewObject();
             ViewCriteria vc1 = vo1.createViewCriteria();
             ViewCriteriaRow vcr = vc1.createViewCriteriaRow();
             vcr.setAttribute("HmoTrxHdrId", VendId);
             vc1.addRow(vcr);
             vo1.applyViewCriteria(vc1);
             vo1.executeQuery();
             if(vo1.getEstimatedRowCount() > 0){
                 Row rw = vo1.first();
                 OfferNumber = rw.getAttribute("HmoOption") == null ? "" : rw.getAttribute("HmoOption").toString();
             }
             
             return OfferNumber;
        
         } else {
        return (String) getAttributeInternal(TRANS_DEPOPTIONLOV);}
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_depOptionLov.
     * @param value value to set the  Trans_depOptionLov
     */
    public void setTrans_depOptionLov(String value) {
        setAttributeInternal(TRANS_DEPOPTIONLOV, value);
    }

    /**
     * Gets the attribute value for DEP_PHOTO_CLOB using the alias name DepPhotoClob.
     * @return the DEP_PHOTO_CLOB
     */
    public ClobDomain getDepPhotoClob() {
        return (ClobDomain) getAttributeInternal(DEPPHOTOCLOB);
    }

    /**
     * Sets <code>value</code> as attribute value for DEP_PHOTO_CLOB using the alias name DepPhotoClob.
     * @param value value to set the DEP_PHOTO_CLOB
     */
    public void setDepPhotoClob(ClobDomain value) {
        setAttributeInternal(DEPPHOTOCLOB, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EvidenceCount.
     * @return the EvidenceCount
     */
    public String getEvidenceCount() {
        return (String) getAttributeInternal(EVIDENCECOUNT);
    }


    /**
     * Gets the associated <code>XxhrHmoTrxHdr_EOViewRowImpl</code> using master-detail link XxhrHmoTrxHdr_EOView.
     */
    public XxhrHmoTrxHdr_EOViewRowImpl getXxhrHmoTrxHdr_EOView() {
        return (XxhrHmoTrxHdr_EOViewRowImpl) getAttributeInternal(XXHRHMOTRXHDR_EOVIEW);
    }

    /**
     * Sets the master-detail link XxhrHmoTrxHdr_EOView between this object and <code>value</code>.
     */
    public void setXxhrHmoTrxHdr_EOView(XxhrHmoTrxHdr_EOViewRowImpl value) {
        setAttributeInternal(XXHRHMOTRXHDR_EOVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxfndAttachment_EOView.
     */
    public RowIterator getXxfndAttachment_EOView() {
        return (RowIterator) getAttributeInternal(XXFNDATTACHMENT_EOVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SelfDependent_ROVO.
     */
    public RowSet getSelfDependent_ROVO() {
        return (RowSet) getAttributeInternal(SELFDEPENDENT_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Title_LOV.
     */
    public RowSet getTitle_LOV() {
        return (RowSet) getAttributeInternal(TITLE_LOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DepGender_LOV.
     */
    public RowSet getDepGender_LOV() {
        return (RowSet) getAttributeInternal(DEPGENDER_LOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DepMaritalStatus_LOV.
     */
    public RowSet getDepMaritalStatus_LOV() {
        return (RowSet) getAttributeInternal(DEPMARITALSTATUS_LOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OtherDep_LOV.
     */
    public RowSet getOtherDep_LOV() {
        return (RowSet) getAttributeInternal(OTHERDEP_LOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XxhrHmoTrxDtl_EOView.
     */
    public RowSet getXxhrHmoTrxDtl_EOView() {
        return (RowSet) getAttributeInternal(XXHRHMOTRXDTL_EOVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Hospital_ROVO.
     */
    public RowSet getHospital_ROVO() {
        return (RowSet) getAttributeInternal(HOSPITAL_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> State_ROVO.
     */
    public RowSet getState_ROVO() {
        return (RowSet) getAttributeInternal(STATE_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XxhrHmoTrxHdr_ROVO1.
     */
    public RowSet getXxhrHmoTrxHdr_ROVO1() {
        return (RowSet) getAttributeInternal(XXHRHMOTRXHDR_ROVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XxhrHmoTrxHdr.
     */
    public RowSet getXxhrHmoTrxHdr() {
        return (RowSet) getAttributeInternal(XXHRHMOTRXHDR);
    }

    /**
     * Gets the view accessor <code>RowSet</code> FetchHospital_ROVO.
     */
    public RowSet getFetchHospital_ROVO() {
        return (RowSet) getAttributeInternal(FETCHHOSPITAL_ROVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> StateOfResidence_ROVO.
     */
    public RowSet getStateOfResidence_ROVO() {
        return (RowSet) getAttributeInternal(STATEOFRESIDENCE_ROVO);
    }
}

