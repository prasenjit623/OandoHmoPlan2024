package model.eo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 22 11:16:43 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxhrHmoHdr_EOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        HmoHdrId,
        HmoTransReference,
        BusinessUnitId,
        HmoRequestNo,
        HmoRequestDate,
        HmoMasterHdrId,
        HmoType,
        PersonId,
        MobileNo,
        MaritalStatus,
        ResiAddress,
        HmoCategory,
        HmoOption,
        HmoPlanTotal,
        HmoPlanDeduction,
        HmoAcceptanceFlag,
        CreatedBy,
        CreationDate,
        LastUpdatedBy,
        LastUpdateDate,
        LastUpdateLogin,
        Gender,
        StateOfResidence,
        Hospital,
        Photo,
        AlternateEmail,
        PhotoClob,
        HmoCopyDepFlag,
        AddiCategory,
        PayrollBatchName,
        SoaFlowid,
        ErrorMsg,
        ApproverComments,
        ApprovalStatus,
        ActiveFlag,
        HmoPlanName,
        RequestType,
        DeleteFlag,
        XxhrHmoDtl_EO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HMOHDRID = AttributesEnum.HmoHdrId.index();
    public static final int HMOTRANSREFERENCE = AttributesEnum.HmoTransReference.index();
    public static final int BUSINESSUNITID = AttributesEnum.BusinessUnitId.index();
    public static final int HMOREQUESTNO = AttributesEnum.HmoRequestNo.index();
    public static final int HMOREQUESTDATE = AttributesEnum.HmoRequestDate.index();
    public static final int HMOMASTERHDRID = AttributesEnum.HmoMasterHdrId.index();
    public static final int HMOTYPE = AttributesEnum.HmoType.index();
    public static final int PERSONID = AttributesEnum.PersonId.index();
    public static final int MOBILENO = AttributesEnum.MobileNo.index();
    public static final int MARITALSTATUS = AttributesEnum.MaritalStatus.index();
    public static final int RESIADDRESS = AttributesEnum.ResiAddress.index();
    public static final int HMOCATEGORY = AttributesEnum.HmoCategory.index();
    public static final int HMOOPTION = AttributesEnum.HmoOption.index();
    public static final int HMOPLANTOTAL = AttributesEnum.HmoPlanTotal.index();
    public static final int HMOPLANDEDUCTION = AttributesEnum.HmoPlanDeduction.index();
    public static final int HMOACCEPTANCEFLAG = AttributesEnum.HmoAcceptanceFlag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int STATEOFRESIDENCE = AttributesEnum.StateOfResidence.index();
    public static final int HOSPITAL = AttributesEnum.Hospital.index();
    public static final int PHOTO = AttributesEnum.Photo.index();
    public static final int ALTERNATEEMAIL = AttributesEnum.AlternateEmail.index();
    public static final int PHOTOCLOB = AttributesEnum.PhotoClob.index();
    public static final int HMOCOPYDEPFLAG = AttributesEnum.HmoCopyDepFlag.index();
    public static final int ADDICATEGORY = AttributesEnum.AddiCategory.index();
    public static final int PAYROLLBATCHNAME = AttributesEnum.PayrollBatchName.index();
    public static final int SOAFLOWID = AttributesEnum.SoaFlowid.index();
    public static final int ERRORMSG = AttributesEnum.ErrorMsg.index();
    public static final int APPROVERCOMMENTS = AttributesEnum.ApproverComments.index();
    public static final int APPROVALSTATUS = AttributesEnum.ApprovalStatus.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int HMOPLANNAME = AttributesEnum.HmoPlanName.index();
    public static final int REQUESTTYPE = AttributesEnum.RequestType.index();
    public static final int DELETEFLAG = AttributesEnum.DeleteFlag.index();
    public static final int XXHRHMODTL_EO = AttributesEnum.XxhrHmoDtl_EO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxhrHmoHdr_EOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.eo.XxhrHmoHdr_EO");
    }


    /**
     * Gets the attribute value for HmoHdrId, using the alias name HmoHdrId.
     * @return the value of HmoHdrId
     */
    public BigDecimal getHmoHdrId() {
        return (BigDecimal) getAttributeInternal(HMOHDRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoHdrId.
     * @param value value to set the HmoHdrId
     */
    public void setHmoHdrId(BigDecimal value) {
        setAttributeInternal(HMOHDRID, value);
    }

    /**
     * Gets the attribute value for HmoTransReference, using the alias name HmoTransReference.
     * @return the value of HmoTransReference
     */
    public BigDecimal getHmoTransReference() {
        return (BigDecimal) getAttributeInternal(HMOTRANSREFERENCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoTransReference.
     * @param value value to set the HmoTransReference
     */
    public void setHmoTransReference(BigDecimal value) {
        setAttributeInternal(HMOTRANSREFERENCE, value);
    }

    /**
     * Gets the attribute value for BusinessUnitId, using the alias name BusinessUnitId.
     * @return the value of BusinessUnitId
     */
    public BigDecimal getBusinessUnitId() {
        return (BigDecimal) getAttributeInternal(BUSINESSUNITID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BusinessUnitId.
     * @param value value to set the BusinessUnitId
     */
    public void setBusinessUnitId(BigDecimal value) {
        setAttributeInternal(BUSINESSUNITID, value);
    }

    /**
     * Gets the attribute value for HmoRequestNo, using the alias name HmoRequestNo.
     * @return the value of HmoRequestNo
     */
    public String getHmoRequestNo() {
        return (String) getAttributeInternal(HMOREQUESTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoRequestNo.
     * @param value value to set the HmoRequestNo
     */
    public void setHmoRequestNo(String value) {
        setAttributeInternal(HMOREQUESTNO, value);
    }

    /**
     * Gets the attribute value for HmoRequestDate, using the alias name HmoRequestDate.
     * @return the value of HmoRequestDate
     */
    public Timestamp getHmoRequestDate() {
        return (Timestamp) getAttributeInternal(HMOREQUESTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoRequestDate.
     * @param value value to set the HmoRequestDate
     */
    public void setHmoRequestDate(Timestamp value) {
        setAttributeInternal(HMOREQUESTDATE, value);
    }

    /**
     * Gets the attribute value for HmoMasterHdrId, using the alias name HmoMasterHdrId.
     * @return the value of HmoMasterHdrId
     */
    public BigDecimal getHmoMasterHdrId() {
        return (BigDecimal) getAttributeInternal(HMOMASTERHDRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoMasterHdrId.
     * @param value value to set the HmoMasterHdrId
     */
    public void setHmoMasterHdrId(BigDecimal value) {
        setAttributeInternal(HMOMASTERHDRID, value);
    }

    /**
     * Gets the attribute value for HmoType, using the alias name HmoType.
     * @return the value of HmoType
     */
    public String getHmoType() {
        return (String) getAttributeInternal(HMOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoType.
     * @param value value to set the HmoType
     */
    public void setHmoType(String value) {
        setAttributeInternal(HMOTYPE, value);
    }

    /**
     * Gets the attribute value for PersonId, using the alias name PersonId.
     * @return the value of PersonId
     */
    public BigDecimal getPersonId() {
        return (BigDecimal) getAttributeInternal(PERSONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonId.
     * @param value value to set the PersonId
     */
    public void setPersonId(BigDecimal value) {
        setAttributeInternal(PERSONID, value);
    }

    /**
     * Gets the attribute value for MobileNo, using the alias name MobileNo.
     * @return the value of MobileNo
     */
    public String getMobileNo() {
        return (String) getAttributeInternal(MOBILENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for MobileNo.
     * @param value value to set the MobileNo
     */
    public void setMobileNo(String value) {
        setAttributeInternal(MOBILENO, value);
    }

    /**
     * Gets the attribute value for MaritalStatus, using the alias name MaritalStatus.
     * @return the value of MaritalStatus
     */
    public String getMaritalStatus() {
        return (String) getAttributeInternal(MARITALSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaritalStatus.
     * @param value value to set the MaritalStatus
     */
    public void setMaritalStatus(String value) {
        setAttributeInternal(MARITALSTATUS, value);
    }

    /**
     * Gets the attribute value for ResiAddress, using the alias name ResiAddress.
     * @return the value of ResiAddress
     */
    public String getResiAddress() {
        return (String) getAttributeInternal(RESIADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ResiAddress.
     * @param value value to set the ResiAddress
     */
    public void setResiAddress(String value) {
        setAttributeInternal(RESIADDRESS, value);
    }

    /**
     * Gets the attribute value for HmoCategory, using the alias name HmoCategory.
     * @return the value of HmoCategory
     */
    public String getHmoCategory() {
        return (String) getAttributeInternal(HMOCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoCategory.
     * @param value value to set the HmoCategory
     */
    public void setHmoCategory(String value) {
        setAttributeInternal(HMOCATEGORY, value);
    }

    /**
     * Gets the attribute value for HmoOption, using the alias name HmoOption.
     * @return the value of HmoOption
     */
    public String getHmoOption() {
        return (String) getAttributeInternal(HMOOPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoOption.
     * @param value value to set the HmoOption
     */
    public void setHmoOption(String value) {
        setAttributeInternal(HMOOPTION, value);
    }

    /**
     * Gets the attribute value for HmoPlanTotal, using the alias name HmoPlanTotal.
     * @return the value of HmoPlanTotal
     */
    public BigDecimal getHmoPlanTotal() {
        return (BigDecimal) getAttributeInternal(HMOPLANTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoPlanTotal.
     * @param value value to set the HmoPlanTotal
     */
    public void setHmoPlanTotal(BigDecimal value) {
        setAttributeInternal(HMOPLANTOTAL, value);
    }

    /**
     * Gets the attribute value for HmoPlanDeduction, using the alias name HmoPlanDeduction.
     * @return the value of HmoPlanDeduction
     */
    public BigDecimal getHmoPlanDeduction() {
        return (BigDecimal) getAttributeInternal(HMOPLANDEDUCTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoPlanDeduction.
     * @param value value to set the HmoPlanDeduction
     */
    public void setHmoPlanDeduction(BigDecimal value) {
        setAttributeInternal(HMOPLANDEDUCTION, value);
    }

    /**
     * Gets the attribute value for HmoAcceptanceFlag, using the alias name HmoAcceptanceFlag.
     * @return the value of HmoAcceptanceFlag
     */
    public String getHmoAcceptanceFlag() {
        return (String) getAttributeInternal(HMOACCEPTANCEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoAcceptanceFlag.
     * @param value value to set the HmoAcceptanceFlag
     */
    public void setHmoAcceptanceFlag(String value) {
        setAttributeInternal(HMOACCEPTANCEFLAG, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Timestamp value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the value of LastUpdateDate
     */
    public Timestamp getLastUpdateDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the value of LastUpdateLogin
     */
    public String getLastUpdateLogin() {
        return (String) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(String value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for Gender, using the alias name Gender.
     * @return the value of Gender
     */
    public String getGender() {
        return (String) getAttributeInternal(GENDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Gender.
     * @param value value to set the Gender
     */
    public void setGender(String value) {
        setAttributeInternal(GENDER, value);
    }

    /**
     * Gets the attribute value for StateOfResidence, using the alias name StateOfResidence.
     * @return the value of StateOfResidence
     */
    public String getStateOfResidence() {
        return (String) getAttributeInternal(STATEOFRESIDENCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StateOfResidence.
     * @param value value to set the StateOfResidence
     */
    public void setStateOfResidence(String value) {
        setAttributeInternal(STATEOFRESIDENCE, value);
    }

    /**
     * Gets the attribute value for Hospital, using the alias name Hospital.
     * @return the value of Hospital
     */
    public String getHospital() {
        return (String) getAttributeInternal(HOSPITAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Hospital.
     * @param value value to set the Hospital
     */
    public void setHospital(String value) {
        setAttributeInternal(HOSPITAL, value);
    }

    /**
     * Gets the attribute value for Photo, using the alias name Photo.
     * @return the value of Photo
     */
    public BlobDomain getPhoto() {
        return (BlobDomain) getAttributeInternal(PHOTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Photo.
     * @param value value to set the Photo
     */
    public void setPhoto(BlobDomain value) {
        setAttributeInternal(PHOTO, value);
    }

    /**
     * Gets the attribute value for AlternateEmail, using the alias name AlternateEmail.
     * @return the value of AlternateEmail
     */
    public String getAlternateEmail() {
        return (String) getAttributeInternal(ALTERNATEEMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for AlternateEmail.
     * @param value value to set the AlternateEmail
     */
    public void setAlternateEmail(String value) {
        setAttributeInternal(ALTERNATEEMAIL, value);
    }

    /**
     * Gets the attribute value for PhotoClob, using the alias name PhotoClob.
     * @return the value of PhotoClob
     */
    public ClobDomain getPhotoClob() {
        return (ClobDomain) getAttributeInternal(PHOTOCLOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for PhotoClob.
     * @param value value to set the PhotoClob
     */
    public void setPhotoClob(ClobDomain value) {
        setAttributeInternal(PHOTOCLOB, value);
    }

    /**
     * Gets the attribute value for HmoCopyDepFlag, using the alias name HmoCopyDepFlag.
     * @return the value of HmoCopyDepFlag
     */
    public String getHmoCopyDepFlag() {
        return (String) getAttributeInternal(HMOCOPYDEPFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoCopyDepFlag.
     * @param value value to set the HmoCopyDepFlag
     */
    public void setHmoCopyDepFlag(String value) {
        setAttributeInternal(HMOCOPYDEPFLAG, value);
    }

    /**
     * Gets the attribute value for AddiCategory, using the alias name AddiCategory.
     * @return the value of AddiCategory
     */
    public String getAddiCategory() {
        return (String) getAttributeInternal(ADDICATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for AddiCategory.
     * @param value value to set the AddiCategory
     */
    public void setAddiCategory(String value) {
        setAttributeInternal(ADDICATEGORY, value);
    }

    /**
     * Gets the attribute value for PayrollBatchName, using the alias name PayrollBatchName.
     * @return the value of PayrollBatchName
     */
    public String getPayrollBatchName() {
        return (String) getAttributeInternal(PAYROLLBATCHNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for PayrollBatchName.
     * @param value value to set the PayrollBatchName
     */
    public void setPayrollBatchName(String value) {
        setAttributeInternal(PAYROLLBATCHNAME, value);
    }

    /**
     * Gets the attribute value for SoaFlowid, using the alias name SoaFlowid.
     * @return the value of SoaFlowid
     */
    public BigDecimal getSoaFlowid() {
        return (BigDecimal) getAttributeInternal(SOAFLOWID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SoaFlowid.
     * @param value value to set the SoaFlowid
     */
    public void setSoaFlowid(BigDecimal value) {
        setAttributeInternal(SOAFLOWID, value);
    }

    /**
     * Gets the attribute value for ErrorMsg, using the alias name ErrorMsg.
     * @return the value of ErrorMsg
     */
    public ClobDomain getErrorMsg() {
        return (ClobDomain) getAttributeInternal(ERRORMSG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ErrorMsg.
     * @param value value to set the ErrorMsg
     */
    public void setErrorMsg(ClobDomain value) {
        setAttributeInternal(ERRORMSG, value);
    }

    /**
     * Gets the attribute value for ApproverComments, using the alias name ApproverComments.
     * @return the value of ApproverComments
     */
    public String getApproverComments() {
        return (String) getAttributeInternal(APPROVERCOMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApproverComments.
     * @param value value to set the ApproverComments
     */
    public void setApproverComments(String value) {
        setAttributeInternal(APPROVERCOMMENTS, value);
    }

    /**
     * Gets the attribute value for ApprovalStatus, using the alias name ApprovalStatus.
     * @return the value of ApprovalStatus
     */
    public String getApprovalStatus() {
        return (String) getAttributeInternal(APPROVALSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApprovalStatus.
     * @param value value to set the ApprovalStatus
     */
    public void setApprovalStatus(String value) {
        setAttributeInternal(APPROVALSTATUS, value);
    }

    /**
     * Gets the attribute value for ActiveFlag, using the alias name ActiveFlag.
     * @return the value of ActiveFlag
     */
    public String getActiveFlag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveFlag.
     * @param value value to set the ActiveFlag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for HmoPlanName, using the alias name HmoPlanName.
     * @return the value of HmoPlanName
     */
    public String getHmoPlanName() {
        return (String) getAttributeInternal(HMOPLANNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for HmoPlanName.
     * @param value value to set the HmoPlanName
     */
    public void setHmoPlanName(String value) {
        setAttributeInternal(HMOPLANNAME, value);
    }

    /**
     * Gets the attribute value for RequestType, using the alias name RequestType.
     * @return the value of RequestType
     */
    public String getRequestType() {
        return (String) getAttributeInternal(REQUESTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestType.
     * @param value value to set the RequestType
     */
    public void setRequestType(String value) {
        setAttributeInternal(REQUESTTYPE, value);
    }

    /**
     * Gets the attribute value for DeleteFlag, using the alias name DeleteFlag.
     * @return the value of DeleteFlag
     */
    public String getDeleteFlag() {
        return (String) getAttributeInternal(DELETEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for DeleteFlag.
     * @param value value to set the DeleteFlag
     */
    public void setDeleteFlag(String value) {
        setAttributeInternal(DELETEFLAG, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXxhrHmoDtl_EO() {
        return (RowIterator) getAttributeInternal(XXHRHMODTL_EO);
    }


    /**
     * @param hmoHdrId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal hmoHdrId) {
        return new Key(new Object[] { hmoHdrId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        BigDecimal hmoId = new BigDecimal(0);
        SequenceImpl seq = new SequenceImpl("XXHR_HMO_HDR_S", this.getDBTransaction());
        hmoId = seq.getSequenceNumber().bigDecimalValue();
        this.setHmoHdrId(hmoId);
        this.setHmoRequestNo("ND - "+hmoId.toString());
        this.setCreatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
        this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
        this.setLastUpdateLogin(ADFContext.getCurrent().getSessionScope().get("userName").toString());
        this.setCreationDate(new Timestamp(System.currentTimeMillis()));
        this.setLastUpdateDate(new Timestamp(System.currentTimeMillis()));
        this.setActiveFlag("N");
        this.setDeleteFlag("N");
        this.setRequestType("NEW_DEPENDENT");
        this.setApprovalStatus("DRAFT");
        
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == EntityImpl.DML_UPDATE) {
           this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
           this.setLastUpdateLogin(ADFContext.getCurrent().getSessionScope().get("userName").toString());
           this.setLastUpdateDate(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }
}

